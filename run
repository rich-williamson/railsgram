#!/usr/bin/env bash

set -eo pipefail

DC="${DC:-exec}"

# If we're running in CI we need to disable TTY allocation for docker compose
# commands that enable it by default, such as exec and run.
TTY=""
if [[ ! -t 1 ]]; then
  TTY="-T"
fi

# -----------------------------------------------------------------------------
# Helper functions start with _ and aren't listed in this script's help menu.
# -----------------------------------------------------------------------------

function _dc {
  docker compose "${DC}" ${TTY} "${@}"
}

# -----------------------------------------------------------------------------

function cmd {
  # Run any command you want in the web container
  _dc web "${@}"
}

function stack {
  DOCKER_BUILDKIT=1 exec docker compose up --build --abort-on-container-exit
}

function rails {
  # Run any Rails commands

  # We need to create the test packs before we run our tests.
  if [ "${1-''}" == "test" ]; then
    _dc -e "RAILS_ENV=test" rails
  fi

  cmd rails "${@}"
}

function rubocop {
  ## Runs rubocop only
  cmd rubocop "${@}"
}

function rubocop:fix {
  ## Runs rubocop and fixes any violations
  cmd rubocop -a "${@}"
}

function bash {
  ## Start a Bash session in the web container
  cmd bash "${@}"
}

function bundle:install {
  ## Install Ruby dependencies and write out a lock file
  _build_run_down web bundle install
}

function bundle:outdated {
  ## List any installed gems that are outdated
  cmd bundle outdated
}

function bundle:update {
  ## Update any installed gems that are outdated
  cmd bundle update
  bundle:install
}


function clean {
  ## Remove cache and other machine generates files
  rm -rf node_modules/ public/assets public/packs* tmp/* .byebug_history
}

function help {
  printf "%s <task> [args]\n\nTasks:\n" "${0}"

  compgen -A function | grep -v "^_" | cat -n

  printf "\nExtended help:\n  Each task has comments for general usage\n"
}

# This idea is heavily inspired by: https://github.com/adriancooney/Taskfile
TIMEFORMAT=$'\nTask completed in %3lR'
time "${@:-help}"
